' Author: Soonbum Jeong
' Time: 2022.09.01 - 11:04
'
' Algorithm
' << 로 시작하는 n번째 셀을 찾는다. (n1) ?
' << 로 시작하는 n+1번째 셀을 찾는다. (n2) ?
' n1과 n2-1 셀 사이에서 가장 넓은 가로 폭을 찾는다.
' 가로 폭과 세로 폭을 기반으로 인쇄 영역을 설정한다.
' 위 작업을 반복한다.
'
' Output
' PDF 파일 결과물은 "내문서" 폴더에 생성됩니다.

Sub Macro_SetPrintArea()
    Dim findStr As String
    Dim i As Long
    Dim c As Range
    Dim LastRow As Long
    Dim maxWidth As Long
    Dim cellCountHor As Integer
    Dim PrintAreas As String
    
    Dim Result As Integer
    Dim FileName As String
    Dim FileIndex As Long
    Dim WSH As Object
    Set WSH = CreateObject("WScript.Shell")
    
    Dim currentCell As Range
    Dim firstCell As Range
    Dim prevCell As Range
    Dim nextCell As Range
    Dim moreNextCell As Range
        
    maxWidth = 0
    FileIndex = 1
    findStr = "<<"                              ' 찾고자 하는 문자열
    PrintAreas = ""                             ' 인쇄 영역 문자열
    Set firstCell = ActiveSheet.Cells(1, 1)     ' 1번째 셀
    ActiveSheet.Cells(1, 1).Select
    
    ' 인쇄할 시 방향을 설정함
    Result = MsgBox("세로 방향으로 인쇄한다면 <예>, 가로 방향으로 인쇄한다면 <아니요>를 클릭하시오.", vbYesNo + vbInformation)
    
    ' 마지막 행 번호를 구함
    With Application.ActiveSheet
        LastRow = .Cells(.Rows.Count, "A").End(xlUp).Row
    End With
    
    ' 현재 시트의 모든 셀을 범위로 함
    With ActiveSheet.Cells
        ' << 문자열이 포함된 셀을 찾아서 nextCell로 지정
        Set prevCell = ActiveSheet.Cells(1, 1)
        Set c = .Find(What:=findStr, Lookat:=xlPart)
        Set nextCell = c
    
        ' nextCell을 찾았다면
        If Not nextCell Is Nothing Then
            ' 같은 조건으로 검색해서 moreNextCell로 지정
            Set c = .FindNext(c)
            Set moreNextCell = c

            ' 마지막 셀까지 반복해서 검색함
            Do While ActiveCell.Row <= LastRow
                ' prevCell ~ nextCell 사이 영역에서 최대 텍스트 길이를 구함
                Set currentCell = prevCell
                Do While ((ActiveCell.Address <> nextCell.Address) And (ActiveCell.Row <= LastRow))
                    If maxWidth < LenMbcs(ActiveCell.Text) Then
                        maxWidth = LenMbcs(ActiveCell.Text)
                    End If
                    ActiveCell.Offset(1, 0).Select  ' 아래로 한 칸 이동
                Loop

                cellCountHor = Round(maxWidth / ActiveCell.ColumnWidth, 0)     ' 가로 방향 셀 개수 파악
                
                ' 인쇄 설정
                ActiveSheet.PageSetup.FitToPagesWide = 1
                ActiveSheet.PageSetup.FitToPagesTall = 1
                ActiveSheet.PageSetup.Zoom = False
                If Result = vbYes Then
                    ActiveSheet.PageSetup.Orientation = xlPortrait
                Else
                    ActiveSheet.PageSetup.Orientation = xlLandscape
                End If
                
                ' 인쇄 영역 다중 설정
'                If (prevCell.Row < nextCell.Row) Then
'                    If PrintAreas = "" Then
'                        PrintAreas = ActiveSheet.Range(Cells(prevCell.Row, prevCell.Column), Cells(nextCell.Row - 2, cellCountHor)).Address
'                    Else
'                        PrintAreas = PrintAreas & "," & ActiveSheet.Range(Cells(prevCell.Row, prevCell.Column), Cells(nextCell.Row - 2, cellCountHor)).Address
'                    End If
'                Else
'                    PrintAreas = PrintAreas & "," & ActiveSheet.Range(Cells(prevCell.Row, prevCell.Column), Cells(LastRow, cellCountHor)).Address
'                End If

                ' 인쇄 영역 설정 및 즉시 인쇄
                If (prevCell.Row < nextCell.Row) Then
                    ActiveSheet.PageSetup.PrintArea = ActiveSheet.Range(Cells(prevCell.Row, prevCell.Column), Cells(nextCell.Row - 2, cellCountHor)).Address
                Else
                    ActiveSheet.PageSetup.PrintArea = ActiveSheet.Range(Cells(prevCell.Row, prevCell.Column), Cells(LastRow, cellCountHor)).Address
                End If
                'ActiveSheet.PrintOut
                ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, _
                        FileName:=WSH.SpecialFolders("MyDocuments") & "\" & "물량표(" & FileIndex & ")" & ".pdf", _
                        OpenAfterPublish:=False
                FileIndex = FileIndex + 1
                
                ' 다음 셀 또 찾기
                Set prevCell = nextCell
                Set nextCell = moreNextCell
                Set c = .FindNext(c)
                Set moreNextCell = c
            Loop
        End If
    End With
    
    ' MsgBox PrintAreas
    ' ActiveSheet.PageSetup.PrintArea = PrintAreas
End Sub

Function LenMbcs(ByVal str As String)
    LenMbcs = LenB(StrConv(str, vbFromUnicode))
End Function
